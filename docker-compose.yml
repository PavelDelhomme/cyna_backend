version: '3.8'

services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: cyna_backend
    ports:
      - "3007:${SERVER_PORT:-3000}" # Map 3007 sur l'hôte vers 3000 dans le conteneur
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - DB_HOST=${DB_HOST:-db}
      - DB_USER=${DB_USER:-admin}
      - DB_PASSWORD=${DB_PASSWORD:-yourpassword}
      - DB_NAME=${DB_NAME:-cyna_database}
      - DB_PORT=${DB_PORT:-3306}
      - RESET_DB=${RESET_DB:-true}
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - .:/app
      - /app/node_modules
    command: npm run dev
    restart: on-failure

  db:
    image: mysql:8.0
    container_name: cyna_db
    ports:
      - "3307:3306" # Map 3307 sur l'hôte vers 3306 dans le conteneur
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD:-yourpassword}
      MYSQL_DATABASE: ${DB_NAME:-cyna_database}
      MYSQL_USER: ${DB_USER:-admin}
      MYSQL_PASSWORD: ${DB_PASSWORD:-yourpassword}
      MYSQL_ALLOW_EMPTY_PASSWORD: "no"
    volumes:
      - db_data:/var/lib/mysql
      # - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql # Désactiver car des problème lors de l'initialisation du conteneur
    healthcheck:
      #test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD}"]
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-pyourpassword"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s # Pour donner plus de temps au conteneur MySQL afin qu'il soit completement démarrer avant de commencer les vérifications de santé.
    # depends_on:
    #   backend:
    #     condition: service_healthy
  
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: cyna_phpmyadmin
    ports:
      - "8080:80"
    environment:
      PMA_HOST: db
      PMA_PORT: 3306
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD:-yourpassword}
      PMA_USER: ${PMA_USER:-root}
      PMA_PASSWORD: ${PMA_PASSWORD:-yourpassword}
    depends_on:
      - db

volumes:
  db_data:
